{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nfunction SignupComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"E-Mail is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass SignupComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.isLoading = false;\n  }\n  onSignup(form) {\n    if (form.invalid) {\n      return;\n    }\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n  static {\n    this.ɵfac = function SignupComponent_Factory(t) {\n      return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignupComponent,\n      selectors: [[\"app-signup\"]],\n      decls: 13,\n      vars: 2,\n      consts: [[3, \"submit\"], [\"signupForm\", \"ngForm\"], [\"matInput\", \"\", \"type\", \"email\", \"placeholder\", \"E-Mail\", \"ngModel\", \"\", \"email\", \"\", \"required\", \"\", \"autocomplete\", \"username\"], [\"emailInput\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"ngModel\", \"\", \"required\", \"\", \"autocomplete\", \"current-password\"], [\"passwordInput\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n      template: function SignupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r5 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0, 1);\n          i0.ɵɵlistener(\"submit\", function SignupComponent_Template_form_submit_1_listener() {\n            i0.ɵɵrestoreView(_r5);\n            const _r0 = i0.ɵɵreference(2);\n            return i0.ɵɵresetView(ctx.onSignup(_r0));\n          });\n          i0.ɵɵelementStart(3, \"mat-form-field\");\n          i0.ɵɵelement(4, \"input\", 2, 3);\n          i0.ɵɵtemplate(6, SignupComponent_mat_error_6_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"mat-form-field\");\n          i0.ɵɵelement(8, \"input\", 5, 6);\n          i0.ɵɵtemplate(10, SignupComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 7);\n          i0.ɵɵtext(12, \"Signup\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(5);\n          const _r3 = i0.ɵɵreference(9);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", _r1.invalid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", _r3.invalid);\n        }\n      },\n      dependencies: [i2.NgIf, i3.MatButton, i4.MatCard, i5.MatFormField, i5.MatError, i6.MatInput, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.EmailValidator, i7.NgModel, i7.NgForm],\n      styles: [\"mat-card[_ngcontent-%COMP%] {\\n  margin:5px;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  width: 50%;\\n  margin: auto;\\n  display: grid;\\n}\\n\\nbutton[_ngcontent-%COMP%]{\\n  width: 20%;\\n  margin: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFVBQVU7RUFDVixXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XHJcbiAgbWFyZ2luOjVweDtcclxufVxyXG5cclxuZm9ybSB7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgZGlzcGxheTogZ3JpZDtcclxufVxyXG5cclxuYnV0dG9ue1xyXG4gIHdpZHRoOiAyMCU7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { SignupComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","SignupComponent","constructor","authService","isLoading","onSignup","form","invalid","createUser","value","email","password","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵlistener","SignupComponent_Template_form_submit_1_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","SignupComponent_mat_error_6_Template","SignupComponent_mat_error_10_Template","ɵɵadvance","ɵɵproperty","_r1","_r3"],"sources":["C:\\Users\\keral\\Desktop\\assignment1\\ng-front\\src\\app\\auth\\signup\\signup.component.ts","C:\\Users\\keral\\Desktop\\assignment1\\ng-front\\src\\app\\auth\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {AuthService} from \"../auth.service\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  isLoading:boolean = false;\n\n  constructor(private authService: AuthService){\n\n  }\n\n  onSignup(form:NgForm){\n    if(form.invalid){\n      return;\n    }\n\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n}\n","<mat-card>\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\">\n\n    <mat-form-field>\n      <input matInput type=\"email\" placeholder=\"E-Mail\" ngModel email required autocomplete=\"username\" #emailInput=\"ngModel\">\n      <mat-error *ngIf=\"emailInput.invalid\">E-Mail is a required field</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input matInput type=\"password\" name=\"password\" placeholder=\"Password\" ngModel required autocomplete=\"current-password\" #passwordInput=\"ngModel\">\n      <mat-error *ngIf=\"passwordInput.invalid\">Password is a required field</mat-error>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" type=\"submit\">Signup</button>\n\n  </form>\n</mat-card>\n"],"mappings":";;;;;;;;;;ICKMA,EAAA,CAAAC,cAAA,gBAAsC;IAAAD,EAAA,CAAAE,MAAA,iCAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAK5EH,EAAA,CAAAC,cAAA,gBAAyC;IAAAD,EAAA,CAAAE,MAAA,mCAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;ADNvF,MAKaC,eAAe;EAG1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,SAAS,GAAW,KAAK;EAIzB;EAEAC,QAAQA,CAACC,IAAW;IAClB,IAAGA,IAAI,CAACC,OAAO,EAAC;MACd;;IAGF,IAAI,CAACJ,WAAW,CAACK,UAAU,CAACF,IAAI,CAACG,KAAK,CAACC,KAAK,EAAEJ,IAAI,CAACG,KAAK,CAACE,QAAQ,CAAC;EACpE;;;uBAbWV,eAAe,EAAAJ,EAAA,CAAAe,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAfb,eAAe;MAAAc,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCT5BxB,EAAA,CAAAC,cAAA,eAAU;UACFD,EAAA,CAAA0B,UAAA,oBAAAC,gDAAA;YAAA3B,EAAA,CAAA4B,aAAA,CAAAC,GAAA;YAAA,MAAAC,GAAA,GAAA9B,EAAA,CAAA+B,WAAA;YAAA,OAAU/B,EAAA,CAAAgC,WAAA,CAAAP,GAAA,CAAAjB,QAAA,CAAAsB,GAAA,CAAoB;UAAA,EAAC;UAEnC9B,EAAA,CAAAC,cAAA,qBAAgB;UACdD,EAAA,CAAAiC,SAAA,kBAAuH;UACvHjC,EAAA,CAAAkC,UAAA,IAAAC,oCAAA,uBAA4E;UAC9EnC,EAAA,CAAAG,YAAA,EAAiB;UAEjBH,EAAA,CAAAC,cAAA,qBAAgB;UACdD,EAAA,CAAAiC,SAAA,kBAAiJ;UACjJjC,EAAA,CAAAkC,UAAA,KAAAE,qCAAA,uBAAiF;UACnFpC,EAAA,CAAAG,YAAA,EAAiB;UAEjBH,EAAA,CAAAC,cAAA,iBAAwD;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;UARzDH,EAAA,CAAAqC,SAAA,GAAwB;UAAxBrC,EAAA,CAAAsC,UAAA,SAAAC,GAAA,CAAA7B,OAAA,CAAwB;UAKxBV,EAAA,CAAAqC,SAAA,GAA2B;UAA3BrC,EAAA,CAAAsC,UAAA,SAAAE,GAAA,CAAA9B,OAAA,CAA2B;;;;;;;;SDDhCN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}