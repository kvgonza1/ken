{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isAuthenticated = false;\n    this.authStatusListener = new Subject();\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n  createUser(email, password) {\n    const authData = {\n      email: email,\n      password: password\n    };\n    this.http.post(\"http://localhost:3000/api/user/signup\", authData).subscribe(res => {\n      console.log(res);\n    });\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n}\nexport { AuthService };","map":{"version":3,"names":["Subject","AuthService","constructor","http","isAuthenticated","authStatusListener","getAuthStatusListener","asObservable","createUser","email","password","authData","post","subscribe","res","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\keral\\Desktop\\assignment1\\ng-front\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {AuthData} from \"./auth-data.model\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\n@Injectable({providedIn: \"root\"})\r\nexport class AuthService {\r\n  // @ts-ignore\r\n  private token: string;\r\n  private isAuthenticated: boolean = false;\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n}\r\n\r\n  getAuthStatusListener(){\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(email: string, password: string) {\r\n    const authData: AuthData = {email: email, password: password};\r\n    this.http.post(\"http://localhost:3000/api/user/signup\", authData)\r\n      .subscribe(res =>{\r\n        console.log(res);\r\n    });\r\n  }\r\n\r\n}\r\n"],"mappings":"AAGA,SAAQA,OAAO,QAAO,MAAM;;;AAG5B,MACaC,WAAW;EAMtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,eAAe,GAAY,KAAK;IAChC,KAAAC,kBAAkB,GAAG,IAAIL,OAAO,EAAW;EAIrD;EAEEM,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;EAC/C;EAEAC,UAAUA,CAACC,KAAa,EAAEC,QAAgB;IACxC,MAAMC,QAAQ,GAAa;MAACF,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;IAC7D,IAAI,CAACP,IAAI,CAACS,IAAI,CAAC,uCAAuC,EAAED,QAAQ,CAAC,CAC9DE,SAAS,CAACC,GAAG,IAAG;MACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EACJ;;;uBApBWb,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXnB,WAAW;MAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;MAAAC,UAAA,EADC;IAAM;EAAA;;SAClBtB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}