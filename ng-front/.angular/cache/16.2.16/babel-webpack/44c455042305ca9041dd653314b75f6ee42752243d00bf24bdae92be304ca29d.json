{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../post.service\";\nimport * as i2 from \"@angular/router\";\nfunction PostCreateComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Title is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PostCreateComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Content is a required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass PostCreateComponent {\n  constructor(postService, route) {\n    this.postService = postService;\n    this.route = route;\n    this.post = {\n      id: '',\n      title: '',\n      content: ''\n    };\n    this.mode = 'create';\n    this.postId = '';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(paramMap => {\n      if (paramMap.has('postId')) {\n        console.log('edit');\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.postService.getPostById(this.postId).subscribe(post => {\n          this.post = {\n            id: post._id,\n            title: post.title,\n            content: post.content\n          };\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = '';\n      }\n    });\n  }\n  onAddPost(form) {\n    if (form.invalid) {\n      return;\n    }\n    if (this.mode === 'create') {\n      this.postService.addPost(form.value.title, form.value.content);\n      form.resetForm();\n    } else {\n      this.postService.updatePost(this.postId, form.value.title, form.value.content);\n    }\n  }\n  static {\n    this.ɵfac = function PostCreateComponent_Factory(t) {\n      return new (t || PostCreateComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PostCreateComponent,\n      selectors: [[\"app-post-create\"]],\n      decls: 13,\n      vars: 4,\n      consts: [[3, \"submit\"], [\"postForm\", \"ngForm\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"title\", \"placeholder\", \"Enter Title\", \"required\", \"\", \"minlength\", \"3\", 3, \"ngModel\"], [\"title\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"rows\", \"4\", \"name\", \"content\", \"placeholder\", \"Enter Content\", \"required\", \"\", \"minlength\", \"5\", 3, \"ngModel\"], [\"content\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n      template: function PostCreateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r5 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"mat-card\")(1, \"form\", 0, 1);\n          i0.ɵɵlistener(\"submit\", function PostCreateComponent_Template_form_submit_1_listener() {\n            i0.ɵɵrestoreView(_r5);\n            const _r0 = i0.ɵɵreference(2);\n            return i0.ɵɵresetView(ctx.onAddPost(_r0));\n          });\n          i0.ɵɵelementStart(3, \"mat-form-field\");\n          i0.ɵɵelement(4, \"input\", 2, 3);\n          i0.ɵɵtemplate(6, PostCreateComponent_mat_error_6_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"mat-form-field\");\n          i0.ɵɵelement(8, \"textarea\", 5, 6);\n          i0.ɵɵtemplate(10, PostCreateComponent_mat_error_10_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 7);\n          i0.ɵɵtext(12, \"Submit\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(5);\n          const _r3 = i0.ɵɵreference(9);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.post.title);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", _r1.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.post.content);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", _r3.invalid);\n        }\n      },\n      styles: [\"mat-card[_ngcontent-%COMP%] {\\n  margin:5px;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  width: 50%;\\n  margin: auto;\\n  display: grid;\\n}\\n\\nbutton[_ngcontent-%COMP%]{\\n  width: 20%;\\n  margin: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcG9zdC9wb3N0LWNyZWF0ZS9wb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xyXG4gIG1hcmdpbjo1cHg7XHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbn1cclxuXHJcbmJ1dHRvbntcclxuICB3aWR0aDogMjAlO1xyXG4gIG1hcmdpbjogNXB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}\nexport { PostCreateComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PostCreateComponent","constructor","postService","route","post","id","title","content","mode","postId","ngOnInit","paramMap","subscribe","has","console","log","get","getPostById","_id","onAddPost","form","invalid","addPost","value","resetForm","updatePost","ɵɵdirectiveInject","i1","PostService","i2","ActivatedRoute","selectors","decls","vars","consts","template","PostCreateComponent_Template","rf","ctx","ɵɵlistener","PostCreateComponent_Template_form_submit_1_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","PostCreateComponent_mat_error_6_Template","PostCreateComponent_mat_error_10_Template","ɵɵadvance","ɵɵproperty","_r1","_r3"],"sources":["C:\\Users\\keral\\Desktop\\assignment1\\ng-front\\src\\app\\post\\post-create\\post-create.component.ts","C:\\Users\\keral\\Desktop\\assignment1\\ng-front\\src\\app\\post\\post-create\\post-create.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {PostService} from \"../post.service\";\nimport {ActivatedRoute, ParamMap} from \"@angular/router\";\nimport {Post} from \"../post.model\";\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit {\n  post: Post = {id: '', title: '', content: ''};\n  private mode: string = 'create';\n  private postId: string = '';\n\n  constructor(public postService: PostService, public route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('postId')) {\n        console.log('edit');\n        this.mode = 'edit';\n        this.postId = <string>paramMap.get('postId');\n        this.postService.getPostById(this.postId).subscribe(post => {\n          this.post = {id: post._id, title: post.title, content: post.content};\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = '';\n      }\n    });\n  }\n\n  onAddPost(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    if (this.mode === 'create') {\n      this.postService.addPost(form.value.title, form.value.content);\n      form.resetForm()\n    } else{\n      this.postService.updatePost(this.postId, form.value.title, form.value.content);\n    }\n  }\n}\n","<mat-card>\n  <form (submit)=\"onAddPost(postForm)\" #postForm=\"ngForm\">\n\n    <mat-form-field>\n      <input matInput type=\"text\" name=\"title\" placeholder=\"Enter Title\"\n             [ngModel]=\"post.title\"\n             required minlength=\"3\"\n             #title=\"ngModel\">\n      <mat-error *ngIf=\"title.invalid\">Title is a required field</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <textarea matInput rows=\"4\" name=\"content\" placeholder=\"Enter Content\"\n                [ngModel]=\"post.content\"\n                required minlength=\"5\"\n                #content=\"ngModel\"></textarea>\n\n      <mat-error *ngIf=\"content.invalid\">Content is a required field</mat-error>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n\n  </form>\n</mat-card>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}