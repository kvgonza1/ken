{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nclass AuthInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n  static {\n    this.ɵfac = function AuthInterceptor_Factory(t) {\n      return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n}\nexport { AuthInterceptor };","map":{"version":3,"names":["AuthInterceptor","constructor","authService","intercept","req","next","authToken","getToken","authRequest","clone","headers","set","handle","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["C:\\Users\\keral\\Desktop\\assignment1\\ng-front\\src\\app\\auth\\auth-interceptor.ts"],"sourcesContent":["import {HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {Injectable} from \"@angular/core\";\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler){\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone( {\r\n      headers: req.headers.set('authorization', 'Bearer '+ authToken)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n"],"mappings":";;AAGA,MACaA,eAAe;EAC1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAC/B;EACAC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IAC7C,MAAMC,WAAW,GAAGJ,GAAG,CAACK,KAAK,CAAE;MAC7BC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAEL,SAAS;KAC/D,CAAC;IACF,OAAOD,IAAI,CAACO,MAAM,CAACJ,WAAW,CAAC;EACjC;;;uBATWR,eAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAfhB,eAAe;MAAAiB,OAAA,EAAfjB,eAAe,CAAAkB;IAAA;EAAA;;SAAflB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}